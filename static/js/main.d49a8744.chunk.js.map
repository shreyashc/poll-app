{"version":3,"sources":["static/chart.svg","reducers/AuthReducer.js","contexts/AuthContext.js","utils/constants.js","client/apiClient.js","components/PollCard/PollCard.jsx","pages/Dashboard/Dashboard.jsx","components/LogInForm/Error.jsx","components/LogInForm/LoginForm.jsx","pages/LogIn/Login.jsx","components/SignUpForm/SignUpForm.jsx","pages/SignUp/SignUp.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","pages/Vote/Vote.jsx","components/voters/Voters.jsx","components/Option/Option.jsx","pages/PollDetails/PollDetails.jsx","components/CreatePollForm/Error.jsx","components/CreatePollForm/CreatePollForm.jsx","pages/CreatePoll/CreatePoll.jsx","pages/Success/Success.jsx","components/Logout/Logout.jsx","components/NavBar/NavBar.jsx","pages/About/About.jsx","pages/Landing/Landing.jsx","App.js","index.js"],"names":["module","exports","authReducer","state","action","type","username","payload","userId","AuthContext","createContext","AuthContextProvider","children","useReducer","user","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","FRONTEND_URL","BG_COLORS","instance","require","create","baseURL","headers","withCredentials","cardVariants","hidden","opacity","visible","transition","duration","PollCard","poll","props","date","Date","createdAt","div","initial","animate","variants","className","active","onClick","history","push","_id","question","format","Dashboard","useState","polls","setPolls","useContext","loading","setLoading","isMounted","axiosInstance","get","then","response","data","catch","err","console","log","status","clear","replace","map","index","key","Error","msg","initialValues","password","validationSchema","Yup","required","LoginForm","error","setError","onSubmit","values","a","post","id","formik","useFormik","handleSubmit","htmlFor","aria-hidden","name","placeholder","onChange","handleChange","touched","errors","autoComplete","disabled","to","Login","password1","password2","oneOf","SignUpForm","message","SignUp","PrivateRoute","RouteComponent","component","rest","render","PublicRoute","Vote","setname","setPoll","selectedOption","setselectedOption","nameError","setNameError","optionError","setOptionError","submitError","setSubmitError","match","params","options","opt","whileHover","scale","originX","color","stiffness","option","e","target","optionId","Voters","Option","toShow","toSetShow","votes","initiaValue","voters","voter","title","display","text","responsive","maintainAspectRatio","defaultFontSize","PollDetails","setData","ending","setEnding","deleting","setDeleting","pollUrl","tempData","tempLabel","forEach","labels","datasets","label","backgroundColor","href","patch","delete","Array","of","min","CreatePollForm","optionProps","remove","form","CreatePoll","Success","withRouter","loggingOut","setLoggingOut","handleClick","NavBar","open","setOpen","closeMenu","About","rel","Variants","before","y","damping","after","Landing","src","alt","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d49a8744.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chart.4bbfc017.svg\";","export const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGGED_IN\":\r\n            return {\r\n                ...state,\r\n                username: action.payload.username,\r\n                userId: action.payload.userId,\r\n            };\r\n\r\n        case \"LOGGED_OUT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport { authReducer } from \"../reducers/AuthReducer\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n    const [user, dispatch] = useReducer(authReducer, {}, () => {\r\n        const user = localStorage.getItem(\"user\");\r\n        return user ? JSON.parse(user) : null;\r\n    });\r\n    useEffect(() => {\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }, [user]);\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","export const FRONTEND_URL = \"https://shreyashc.github.io/poll-app/\";\r\n\r\nexport const API_BASE_URL = \"https://hc-poll.herokuapp.com/\";\r\n\r\nexport const BG_COLORS = [\r\n    \"rgb(255, 154, 60)\",\r\n    \"rgb(240, 47, 89)\",\r\n    \"rgb(72, 90, 250)\",\r\n    \"rgb(238, 34, 238)\",\r\n    \"rgb(255, 50, 94)\",\r\n    \"rgb(26, 185, 224)\",\r\n    \"rgb(27, 27, 27)\",\r\n    \"rgb(27, 219, 155)\",\r\n    \"rgb(117, 72, 241)\",\r\n    \"rgb(212, 52, 24)\",\r\n    \"rgb(14, 160, 26)\",\r\n    \"rgba(255, 99, 132, 1)\",\r\n    \"rgb(94, 18, 34)\",\r\n    \"rgb(25, 4, 75)\",\r\n    \"rgb(116, 209, 186)\",\r\n    \"rgb(96, 16, 99)\",\r\n    \"rgb(233, 31, 24)\",\r\n    \"rgb(255, 154, 60)\",\r\n    \"rgb(201, 19, 59)\",\r\n    \"rgb(25, 42, 199)\",\r\n    \"rgb(238, 34, 238)\",\r\n    \"rgb(255, 50, 94)\",\r\n    \"rgb(26, 185, 224)\",\r\n    \"rgb(27, 27, 27)\",\r\n    \"rgb(27, 219, 155)\",\r\n    \"rgb(117, 72, 241)\",\r\n    \"rgb(212, 52, 24)\",\r\n    \"rgb(14, 160, 26)\",\r\n    \"rgba(255, 99, 132, 1)\",\r\n    \"rgb(94, 18, 34)\",\r\n    \"rgb(25, 4, 75)\",\r\n    \"rgb(116, 209, 186)\",\r\n    \"rgb(96, 16, 99)\",\r\n    \"rgb(233, 31, 24)\",\r\n];\r\n","import { API_BASE_URL } from \"../utils/constants\";\r\nconst axios = require(\"axios\");\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:1337/\",\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n    withCredentials: true,\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./style.scss\";\r\n\r\nconst cardVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 },\r\n    transition: {\r\n        duration: 0.1,\r\n    },\r\n};\r\nconst PollCard = ({ poll, ...props }) => {\r\n    const onClick = () => {\r\n        props.history.push(`/poll/${poll._id}`);\r\n    };\r\n    const date = new Date(poll.createdAt);\r\n\r\n    return (\r\n        <motion.div\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={cardVariants}\r\n            className={\r\n                poll.active\r\n                    ? \"poll-active card-container\"\r\n                    : \"poll-ended card-container\"\r\n            }\r\n            onClick={onClick}\r\n        >\r\n            <div className=\"question\">{poll.question}</div>\r\n            <div className=\"date\">\r\n                <Moment date={date} format=\"DD/MM/YYYY\" />\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default PollCard;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport PollCard from \"../../components/PollCard/PollCard\";\r\nimport \"./style.scss\";\r\n\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nconst Dashboard = (props) => {\r\n    const [polls, setPolls] = useState([]);\r\n    const { user, dispatch } = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        if (isMounted) setLoading(true);\r\n        axiosInstance\r\n            .get(\"polls/user/124\")\r\n            .then((response) => {\r\n                if (isMounted) setLoading(false);\r\n                setPolls(response.data);\r\n            })\r\n            .catch((err) => {\r\n                if (isMounted) setLoading(false);\r\n                console.log(err);\r\n                if (err.response) {\r\n                    if (err.response.status === 401) {\r\n                        localStorage.clear(\"user\");\r\n                        dispatch({ type: \"LOGGED_OUT\" });\r\n                        props.history.replace(\"/\");\r\n                    }\r\n                }\r\n            });\r\n        return () => {\r\n            return (isMounted = false);\r\n        };\r\n    }, [props.history, dispatch]);\r\n\r\n    const addPoll = () => {\r\n        props.history.push(\"/create-poll\");\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"user\">\r\n                <div className=\"username\">\r\n                    Welcome, <span>{user.username}</span>\r\n                </div>\r\n            </div>\r\n            <h1>Dashboard</h1>\r\n\r\n            {loading ? (\r\n                <div className=\"dashboard-loading\">\r\n                    <div className=\"loading-spinner-container\">\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <div className=\"heading\">My Polls</div>\r\n            <div className=\"polls\">\r\n                <div className=\"add-poll card-container\" onClick={addPoll}>\r\n                    <div className=\"fas fa-plus\"></div>\r\n                    <div className=\"text\">New Poll</div>\r\n                </div>\r\n\r\n                {polls.map((poll, index) => (\r\n                    <PollCard poll={poll} key={index} {...props} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ msg }) => {\r\n    return <div className=\"error\">{msg}</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useContext } from \"react\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./Error\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport \"../SignUpForm/style.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nconst initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    username: Yup.string().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst LoginForm = (props) => {\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { dispatch } = useContext(AuthContext);\r\n    const onSubmit = async (values) => {\r\n        setLoading(true);\r\n        axiosInstance\r\n            .post(\"auth/login/\", values)\r\n            .then((response) => {\r\n                setError(null);\r\n                setLoading(false);\r\n                const { id, username } = response.data;\r\n                dispatch({\r\n                    type: \"LOGGED_IN\",\r\n                    payload: { username, userId: id },\r\n                });\r\n                props.history.replace(\"/dashboard\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                console.log(error);\r\n                setError(\"Invalid Username/password\");\r\n            });\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema,\r\n    });\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">\r\n                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        placeholder=\"username\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.username && formik.errors.username ? (\r\n                        <Error msg={formik.errors.password} />\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">\r\n                        <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"password\"\r\n                        autoComplete=\"on\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password ? (\r\n                        <Error msg={formik.errors.password} />\r\n                    ) : null}\r\n                </div>\r\n                {error && <div className=\"error\">{error}</div>}\r\n\r\n                {loading ? (\r\n                    <div className=\"loading-spinner-container\">\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                ) : null}\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    value={loading ? \"Please Wait\" : \"Login\"}\r\n                    id=\"submit\"\r\n                    disabled={loading}\r\n                />\r\n                <div className=\"info\">\r\n                    Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport LoginForm from \"../../components/LogInForm/LoginForm\";\r\nimport \"./style.scss\";\r\nconst Login = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>LOGIN</h1>\r\n            <LoginForm {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./style.scss\";\r\nconst initialValues = {\r\n    username: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    username: Yup.string().required(\"Required!\"),\r\n    password1: Yup.string().required(\"Required!\"),\r\n    password2: Yup.string()\r\n        .required(\"Required!\")\r\n        .oneOf([Yup.ref(\"password1\"), null], \"Passwords don't match\"),\r\n});\r\n\r\nconst SignUpForm = (props) => {\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit = async (values) => {\r\n        setLoading(true);\r\n        const { password1, username } = values;\r\n        axiosInstance\r\n            .post(\"auth/signup/\", {\r\n                username: username,\r\n                password: password1,\r\n            })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                setError(null);\r\n                props.history.push(\"/login\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                if (error.response) {\r\n                    setError(error.response.data.message);\r\n                } else {\r\n                    setError(\"Someting went wrong :(\");\r\n                }\r\n            });\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema,\r\n    });\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">\r\n                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        placeholder=\"username\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n\r\n                    {formik.touched.username && formik.errors.username ? (\r\n                        <div className=\"error\">{formik.errors.username}</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password1\">\r\n                        <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password1\"\r\n                        id=\"password1\"\r\n                        placeholder=\"password\"\r\n                        autoComplete=\"on\"\r\n                        value={formik.values.password1}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.password1 && formik.errors.password1 ? (\r\n                        <div className=\"error\">{formik.errors.password1}</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password2\">\r\n                        <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        id=\"password2\"\r\n                        autoComplete=\"on\"\r\n                        placeholder=\"confirm password\"\r\n                        value={formik.values.password2}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.password2 && formik.errors.password2 ? (\r\n                        <div className=\"error\">{formik.errors.password2}</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"error\">{error}</div>\r\n                {loading ? (\r\n                    <div className=\"loading-spinner-container\">\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                ) : null}\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    value={loading ? \"Please Wait\" : \"Sig Up\"}\r\n                    id=\"submit\"\r\n                    disabled={loading}\r\n                />\r\n                <div className=\"info\">\r\n                    Have an account?<Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport SignUpForm from \"../../components/SignUpForm/SignUpForm\";\r\nimport \"../LogIn/style.scss\";\r\nconst SignUp = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>SIGN UP</h1>\r\n            <SignUpForm {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { user } = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user ? (\r\n                    <RouteComponent {...props} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nconst PublicRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { user } = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user ? (\r\n                    <Redirect to={\"/dashboard\"} />\r\n                ) : (\r\n                    <RouteComponent {...props} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport \"./style.scss\";\r\n\r\nconst Vote = (props) => {\r\n    const [name, setname] = useState(\"\");\r\n    const [poll, setPoll] = useState(null);\r\n    const [selectedOption, setselectedOption] = useState(\"\");\r\n    const [nameError, setNameError] = useState(null);\r\n    const [optionError, setOptionError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [submitError, setSubmitError] = useState(null);\r\n    const id = props.match.params.id;\r\n\r\n    const handleClick = () => {\r\n        setSubmitError(null);\r\n        if (!name) {\r\n            setNameError(\"Please Enter your name.\");\r\n        } else {\r\n            setNameError(null);\r\n        }\r\n        if (!selectedOption) {\r\n            setOptionError(\"Please select an option.\");\r\n        } else {\r\n            setOptionError(null);\r\n        }\r\n        if (!name || !selectedOption) {\r\n            return;\r\n        }\r\n        let isMounted = true;\r\n        if (isMounted) setLoading(true);\r\n        axiosInstance\r\n            .post(`/vote/${id}`, {\r\n                name,\r\n                optionId: selectedOption,\r\n            })\r\n            .then((response) => {\r\n                if (isMounted) {\r\n                    setLoading(false);\r\n                }\r\n                props.history.push(\"/success\");\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                if (isMounted) {\r\n                    setLoading(false);\r\n                    setSubmitError(\"something Went worng\");\r\n                }\r\n                console.log(error);\r\n            });\r\n\r\n        return () => (isMounted = false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n            .get(`polls/${id}`)\r\n            .then((response) => {\r\n                setPoll(response.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Vote</h1>\r\n            <div className=\"vote-card\">\r\n                {poll ? (\r\n                    <div>\r\n                        <div className=\"question\">{poll.question}</div>\r\n                        <div className=\"poll-options\">\r\n                            {poll.options.map((opt, index) => {\r\n                                return (\r\n                                    <motion.div\r\n                                        key={index}\r\n                                        className={\r\n                                            opt._id === selectedOption\r\n                                                ? \"poll-option opt-selected\"\r\n                                                : \"poll-option\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            setselectedOption(opt._id);\r\n                                        }}\r\n                                        whileHover={{\r\n                                            scale: 1.1,\r\n                                            originX: 0,\r\n                                            color: \"#1466d1\",\r\n                                        }}\r\n                                        transition={{\r\n                                            type: \"spring\",\r\n                                            stiffness: 300,\r\n                                        }}\r\n                                    >\r\n                                        {opt.option}\r\n                                    </motion.div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {poll && poll.active ? null : (\r\n                                <div className=\"poll-has-ended\">\r\n                                    Poll has been ended\r\n                                </div>\r\n                            )}\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={name}\r\n                                onChange={(e) => {\r\n                                    setname(e.target.value);\r\n                                }}\r\n                                disabled={poll ? !poll.active : true}\r\n                            />\r\n                            <div className=\"errors\">\r\n                                {optionError ? (\r\n                                    <div className=\"error\">{optionError}</div>\r\n                                ) : null}\r\n                                {nameError ? (\r\n                                    <div className=\"error\">{nameError}</div>\r\n                                ) : null}\r\n                                {submitError ? (\r\n                                    <div className=\"error\">{submitError}</div>\r\n                                ) : null}\r\n                            </div>\r\n                            {loading ? (\r\n                                <div className=\"loading-spinner-container\">\r\n                                    <i className=\"fas fa-spinner fa-spin\"></i>\r\n                                </div>\r\n                            ) : null}\r\n                            <div className=\"vote-btn\">\r\n                                <button\r\n                                    onClick={handleClick}\r\n                                    disabled={\r\n                                        (poll ? !poll.active : true) || loading\r\n                                    }\r\n                                >\r\n                                    {loading ? \"Please wait\" : \"vote\"}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"dashboard-loading\">\r\n                        <div className=\"loading-spinner-container\">\r\n                            <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Vote;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Voters = ({ name }) => {\r\n    return <div className=\"voter-name\">{name}</div>;\r\n};\r\n\r\nexport default Voters;\r\n","import React, { useState } from \"react\";\r\nimport Voters from \"../voters/Voters\";\r\nimport \"./style.scss\";\r\n\r\nconst Option = ({ opt }) => {\r\n    const [toShow, toSetShow] = useState(false);\r\n    const handleClick = () => {\r\n        toSetShow((initiaValue) => !initiaValue);\r\n    };\r\n    return (\r\n        <div className=\"option-details-container\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"option-name\">{opt.option}</div>\r\n                <div className=\"option-votes\">{opt.votes}</div>\r\n                <div className=\"arrow\" onClick={handleClick}>\r\n                    <i className=\"fa fa-angle-down\"></i>\r\n                </div>\r\n            </div>\r\n            <div className={toShow === true ? \"voters show\" : \"voters\"}>\r\n                <div>voters:</div>\r\n                {opt.voters.map((voter, index) => {\r\n                    return <Voters key={index} name={voter} />;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Option;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport Option from \"../../components/Option/Option\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport \"./style.scss\";\r\n\r\nimport { BG_COLORS, FRONTEND_URL } from \"../../utils/constants\";\r\nconst options = {\r\n    title: {\r\n        display: true,\r\n        text: \"Info Graphics\",\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        defaultFontSize: \"14px\",\r\n    },\r\n};\r\nconst PollDetails = (props) => {\r\n    const [poll, setPoll] = useState(null);\r\n    const [data, setData] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [ending, setEnding] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const id = props.match.params.id;\r\n    const pollUrl = `${FRONTEND_URL}#/vote/${id}`;\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        if (isMounted) setLoading(true);\r\n        axiosInstance\r\n            .get(`polls/${id}`)\r\n            .then((response) => {\r\n                if (isMounted) setLoading(false);\r\n                setPoll(response.data);\r\n            })\r\n            .catch((err) => {\r\n                if (isMounted) setLoading(false);\r\n                console.log(err);\r\n            });\r\n        return () => {\r\n            return (isMounted = false);\r\n        };\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        let tempData = [];\r\n        let tempLabel = [];\r\n        if (poll) {\r\n            poll.options.forEach((opt) => {\r\n                tempLabel.push(opt.option);\r\n                tempData.push(opt.votes);\r\n            });\r\n            setData({\r\n                labels: tempLabel,\r\n                datasets: [\r\n                    {\r\n                        label: \"Chart\",\r\n                        data: tempData,\r\n                        backgroundColor: BG_COLORS,\r\n                    },\r\n                ],\r\n            });\r\n        }\r\n    }, [poll]);\r\n\r\n    const handleDelete = () => {\r\n        setDeleting(true);\r\n        axiosInstance\r\n            .delete(`polls/${id}`)\r\n            .then(() => {\r\n                setDeleting(false);\r\n                props.history.replace(\"/dashboard\");\r\n            })\r\n            .catch((err) => {\r\n                setDeleting(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    const handleEnd = () => {\r\n        setEnding(true);\r\n        axiosInstance\r\n            .patch(`polls/${id}/end`)\r\n            .then((response) => {\r\n                setEnding(false);\r\n                setPoll(response.data);\r\n            })\r\n            .catch((err) => {\r\n                setEnding(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div className=\"poll-details-loading\">\r\n                    <div className=\"loading-spinner-container\">\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            {poll ? (\r\n                <div>\r\n                    <h1>Poll details</h1>\r\n                    <div className=\"poll-details-question\">{poll.question}</div>\r\n                    <div className=\"poll-details-continer\">\r\n                        <div className=\"poll-left-container\">\r\n                            <div className=\"link-details\">\r\n                                <div className=\"link-text\">poll url:</div>\r\n                                <div className=\"link\">\r\n                                    <a href={pollUrl}>{pollUrl}</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"options-list\">\r\n                                {poll.options.map((opt) => (\r\n                                    <Option opt={opt} key={opt._id} />\r\n                                ))}\r\n                            </div>\r\n                            {!poll.active ? (\r\n                                <div className=\"ended\">Poll has been Ended</div>\r\n                            ) : null}\r\n                            <div className=\"btns-wrap\">\r\n                                {poll.active ? (\r\n                                    <button\r\n                                        id=\"end-poll-btn\"\r\n                                        onClick={handleEnd}\r\n                                    >\r\n                                        {ending ? \"Ending\" : \"End Poll\"}\r\n                                    </button>\r\n                                ) : null}\r\n                                <div>\r\n                                    <button\r\n                                        onClick={handleDelete}\r\n                                        id=\"delete-poll-btn\"\r\n                                    >\r\n                                        {deleting ? \"Deleting\" : \"Delete Poll\"}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"chart-container\">\r\n                            <Doughnut data={data} options={options} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PollDetails;\r\n","import React from \"react\";\r\n\r\nfunction Error(props) {\r\n    if (props.children instanceof Array) {\r\n        return <div className=\"error\">options can't be empty</div>;\r\n    } else {\r\n        return <div className=\"error\">{props.children}</div>;\r\n    }\r\n}\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Formik, ErrorMessage, FieldArray, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./Error\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport \"./style.scss\";\r\nconst initialValues = {\r\n    question: \"\",\r\n    options: [\r\n        {\r\n            option: \"\",\r\n        },\r\n    ],\r\n};\r\nconst validationSchema = Yup.object({\r\n    question: Yup.string().required(\"Required\"),\r\n    options: Yup.array()\r\n        .of(\r\n            Yup.object({\r\n                option: Yup.string().required(\"options can't be empty\"),\r\n            })\r\n        )\r\n        .min(1, \"atleast one option is required.\"),\r\n});\r\n\r\nconst CreatePollForm = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit = (values) => {\r\n        setLoading(true);\r\n        axiosInstance\r\n            .post(\"polls/\", values)\r\n            .then((response) => {\r\n                setLoading(false);\r\n                props.history.replace(\"/dashboard\");\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <Form className=\"add-form\">\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"question\">Question:</label>\r\n                    <Field type=\"text\" id=\"question\" name=\"question\" />\r\n                    <ErrorMessage name=\"question\" component={Error} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"options\">Options:</label>\r\n\r\n                    <FieldArray name=\"options\" id=\"options\">\r\n                        {(optionProps) => {\r\n                            const { push, remove, form } = optionProps;\r\n                            const { values } = form;\r\n                            const { options } = values;\r\n                            return (\r\n                                <div className=\"options-array\">\r\n                                    {options.map((opt, index) => (\r\n                                        <div\r\n                                            key={index}\r\n                                            className=\"option-container\"\r\n                                        >\r\n                                            <Field\r\n                                                type=\"text\"\r\n                                                name={`options.[${index}].option`}\r\n                                                placeholder={`option ${\r\n                                                    index + 1\r\n                                                }`}\r\n                                            />\r\n                                            <button\r\n                                                id=\"remove\"\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    remove(index);\r\n                                                }}\r\n                                            >\r\n                                                <i className=\"fas fa-minus-circle\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                    <ErrorMessage\r\n                                        name=\"options\"\r\n                                        component={Error}\r\n                                    />\r\n                                    <div className=\"add\">\r\n                                        <button\r\n                                            id=\"add-btn\"\r\n                                            type=\"button\"\r\n                                            onClick={() => {\r\n                                                push(\"\");\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"fas fa-plus\"></i>\r\n                                            &nbsp; option\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    </FieldArray>\r\n                </div>\r\n                {loading ? (\r\n                    <div className=\"loading-spinner-container\">\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    </div>\r\n                ) : null}\r\n                <button type=\"submit\" id=\"submit\" disabled={loading}>\r\n                    {loading ? \"Please Wait\" : \"Create\"}\r\n                </button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default CreatePollForm;\r\n","import React from \"react\";\r\nimport CreatePollForm from \"../../components/CreatePollForm/CreatePollForm\";\r\n\r\nconst CreatePoll = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Create New Poll</h1>\r\n            <CreatePollForm {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { FRONTEND_URL } from \"../../utils/constants\";\r\nconst Success = () => {\r\n    return (\r\n        <div className=\"success-container\">\r\n            <h1>Your response was recorded</h1>\r\n            <h4>\r\n                create your own poll <a href={FRONTEND_URL}>here</a>\r\n            </h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Success;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport axiosInstance from \"../../client/apiClient\";\r\nimport \"./style.scss\";\r\nconst Logout = (props) => {\r\n    const { dispatch } = useContext(AuthContext);\r\n    const [loggingOut, setLoggingOut] = useState(false);\r\n    const handleClick = async () => {\r\n        setLoggingOut(true);\r\n        axiosInstance\r\n            .get(\"auth/logout\")\r\n            .then(() => {\r\n                setLoggingOut(false);\r\n                localStorage.clear(\"user\");\r\n                dispatch({ type: \"LOGGED_OUT\" });\r\n                props.history.replace(\"/\");\r\n            })\r\n            .catch((err) => {\r\n                setLoggingOut(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick} className=\"logout-btn\">\r\n                {loggingOut ? \"Logging out\" : \"Logout\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Logout);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport \"./style.scss\";\r\n\r\nconst NavBar = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const closeMenu = () => setOpen(false);\r\n    const openMenu = () => setOpen(true);\r\n\r\n    const { user } = useContext(AuthContext);\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-container\">\r\n                <div className=\"logo-container\">\r\n                    <NavLink to=\"/\" className=\"logo\">\r\n                        <i className=\"fas fa-poll\"></i> POLL\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"nav-right\">\r\n                    <div className=\"menu-btn\">\r\n                        {open ? (\r\n                            <i className=\"fas fa-times\" onClick={closeMenu}></i>\r\n                        ) : (\r\n                            <i className=\"fas fa-bars\" onClick={openMenu}></i>\r\n                        )}\r\n                    </div>\r\n                    <div className={open ? \"nav-links\" : \"nav-links close\"}>\r\n                        {user ? (\r\n                            <div className=\"nav-item\">\r\n                                <NavLink\r\n                                    to=\"/dashboard\"\r\n                                    className=\"nav-link\"\r\n                                    onClick={closeMenu}\r\n                                >\r\n                                    Dashboard\r\n                                </NavLink>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        {user ? (\r\n                            <div className=\"nav-item\">\r\n                                <NavLink\r\n                                    to=\"/create-poll\"\r\n                                    className=\"nav-link\"\r\n                                    onClick={closeMenu}\r\n                                >\r\n                                    New Poll\r\n                                </NavLink>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        <div className=\"nav-item\">\r\n                            <NavLink\r\n                                to=\"/about\"\r\n                                className=\"nav-link\"\r\n                                onClick={closeMenu}\r\n                            >\r\n                                About\r\n                            </NavLink>\r\n                        </div>\r\n                        {user ? null : (\r\n                            <div className=\"nav-item\">\r\n                                <NavLink\r\n                                    to=\"/login\"\r\n                                    className=\"nav-link\"\r\n                                    onClick={closeMenu}\r\n                                >\r\n                                    Login\r\n                                </NavLink>\r\n                            </div>\r\n                        )}\r\n\r\n                        {user ? null : (\r\n                            <div className=\"nav-item\">\r\n                                <NavLink\r\n                                    to=\"/signup\"\r\n                                    className=\"nav-link\"\r\n                                    onClick={closeMenu}\r\n                                >\r\n                                    SignUp\r\n                                </NavLink>\r\n                            </div>\r\n                        )}\r\n\r\n                        {user ? (\r\n                            <div className=\"nav-item\" onClick={closeMenu}>\r\n                                <Logout />\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <div className=\"about\">\r\n                <h1 className=\"head item\"> Poll App</h1>\r\n                <div className=\"text item\">\r\n                    A platform to create and manage poll,view results and more.\r\n                </div>\r\n                <div className=\"owner\">\r\n                    <div className=\"hc\">&copy; SHREYAS H C</div>\r\n                    <div className=\"social\">\r\n                        <a\r\n                            href=\"https://github.com/shreyashc\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </a>\r\n                        <a\r\n                            href=\"mailto:shreyashc018@gmail.com\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./style.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Variants = {\r\n    before: {\r\n        opacity: 0,\r\n        y: 50,\r\n        transition: {\r\n            type: \"spring\",\r\n            damping: 16,\r\n            stiffness: 200,\r\n            duration: 1.5,\r\n        },\r\n    },\r\n    after: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            type: \"spring\",\r\n            damping: 16,\r\n            stiffness: 200,\r\n        },\r\n    },\r\n};\r\nconst Landing = () => {\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <motion.div\r\n                variants={Variants}\r\n                initial=\"before\"\r\n                animate=\"after\"\r\n                className=\"poll\"\r\n            >\r\n                <h1>POLL</h1>\r\n                <div className=\"txt\">\r\n                    A platform to create and manage polls,\r\n                    <br />\r\n                    view results and more.\r\n                </div>\r\n                <div>Get Started Now.</div>\r\n                <div className=\"buttons\">\r\n                    <Link to=\"/signup\" className=\"signup-btn\">\r\n                        Sign Up\r\n                    </Link>\r\n                    <Link to=\"/login\" className=\"login-btn\">\r\n                        Login\r\n                    </Link>\r\n                </div>\r\n            </motion.div>\r\n            <div className=\"poll-svg\">\r\n                <img src={require(\"../../static/chart.svg\")} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Login from \"./pages/LogIn/Login\";\nimport SignUp from \"./pages/SignUp/SignUp\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute/PublicRoute\";\nimport Vote from \"./pages/Vote/Vote\";\nimport PollDetails from \"./pages/PollDetails/PollDetails\";\nimport CreatePoll from \"./pages/CreatePoll/CreatePoll\";\nimport Success from \"./pages/Success/Success\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport About from \"./pages/About/About\";\nimport Landing from \"./pages/Landing/Landing\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <AuthContextProvider>\n                    <NavBar />\n                    <Switch>\n                        <PublicRoute exact path=\"/\" component={Landing} />\n\n                        <PrivateRoute\n                            exact\n                            path=\"/dashboard\"\n                            component={Dashboard}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/create-poll\"\n                            component={CreatePoll}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/poll/:id\"\n                            component={PollDetails}\n                        />\n\n                        <PublicRoute path=\"/login\" component={Login} />\n\n                        <Route path=\"/about\" component={About} />\n\n                        <PublicRoute path=\"/signup\" component={SignUp} />\n                        <Route path=\"/vote/:id\" component={Vote} />\n                        <Route path=\"/success\" component={Success} />\n                    </Switch>\n                </AuthContextProvider>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}